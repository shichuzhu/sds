syntax = "proto3";
package pb;

// gRPC related messages
service ServerServices {
    rpc ServerConfig (ConfigInfo) returns (StringMessage) {
    }
    rpc ReturnMatches (StringArray) returns (stream StringMessage) {
    }
    rpc CloseServer (IntMessage) returns (StringMessage) {
    }
    rpc ActMembership (StringArray) returns (StringMessage) {
    }
}

service SdfsServices {
    // SDFS client stub
    rpc SdfsCall (StringArray) returns (StringArray) {
    }
    // SDFS related functions
    rpc TransferFiles (stream FileTransMessage) returns (IntMessage) {
    }
    rpc PullFiles (PullFileInfo) returns (PullFileInfo) {
    }
    rpc PutFile (StringMessage) returns (IntMessage) {
    }
    rpc DeleteFile (StringMessage) returns (IntMessage) {
    }
}

// Stream processing services
service StreamProcServices {
    rpc SpawnTask (TaskCfg) returns (TaskCfg) {
    }
    rpc Anchor (TaskCfg) returns (TaskCfg) {
    }
    rpc CheckPoint (TaskCfg) returns (TaskCfg) {
    }
    rpc Terminate (TaskCfg) returns (TaskCfg) {
    }
    // system state to sync between masters
    rpc SyncMasterState (TopoConfig) returns (TopoConfig) {
    }
}

// Stream processing messages
message TaskCfg {
    /* Request */
    // SpawnTask
    int64 bolt_id = 1;
    bool is_sink = 2;
    // Anchor
    repeated string pred_addrs = 3;
    int64 cp_id = 4; // checkpoint ID

    /* Response */
    bool success = 15;
    // SpawnTask
    string listen_addr = 14;
}

message TopoConfig {
    repeated Worker workers = 1;
    int64 cp_id = 2;
    string master_addr = 3;
    string standby_master_addr = 4;

    message Worker {
        int64 node_id = 1;
        repeated TaskCfg tasks = 2;
    }
}

// dserver messages
message ConfigInfo {
    int32 log_level = 1;
    int32 vm_index = 2;
}

message StringMessage {
    string mesg = 1;
}

message StringArray {
    repeated string mesgs = 1;
}

message IntMessage {
    int32 mesg = 1;
}

// Failure detector related messages

message DetectorMessage {
    string header = 1;
    int32 ttl = 2;
    Member mem = 3;
}

message Member {
    string addr = 1;
    int32 sess_num = 2;
    int32 node_id = 3;
    string grpc_addr = 4;
}

message FullMembershipList {
    repeated Member list = 1;
}

message UDPMessage {
    string message_type = 1;
    DetectorMessage dm = 2;
    FullMembershipList fm = 3;
}

// SDFS related messages
message FileCfg {
    string remote_filepath = 1;
    int32 rep_number = 2;
    int32 file_version = 3;
    bool ignore_memtable = 4;
}

message FileTransMessage {
    oneof message {
        bytes chunk = 1;
        FileCfg config = 2;
    }
}

//For pull file
message PullFileInfo {
    string file_name = 1;
    int32 num_of_file = 2;
    int32 myID = 3;
    // input config
    bool ignore_memtable = 4;
    int32 fetch_key = 5;
    // type 0: PullOneFile, type 1: PullAllKey, type 2: query existence
    int32 fetch_type = 6;
    // returned values
    bool file_exist = 8;
    int32 latest_version = 9;
}
