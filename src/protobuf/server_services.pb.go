// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server_services.proto

package serverservices

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfigInfo struct {
	LogLevel             int32    `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	VMIndex              int32    `protobuf:"varint,2,opt,name=VMIndex,proto3" json:"VMIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigInfo) Reset()         { *m = ConfigInfo{} }
func (m *ConfigInfo) String() string { return proto.CompactTextString(m) }
func (*ConfigInfo) ProtoMessage()    {}
func (*ConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8065473b34526ba4, []int{0}
}

func (m *ConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigInfo.Unmarshal(m, b)
}
func (m *ConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigInfo.Marshal(b, m, deterministic)
}
func (m *ConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigInfo.Merge(m, src)
}
func (m *ConfigInfo) XXX_Size() int {
	return xxx_messageInfo_ConfigInfo.Size(m)
}
func (m *ConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigInfo proto.InternalMessageInfo

func (m *ConfigInfo) GetLogLevel() int32 {
	if m != nil {
		return m.LogLevel
	}
	return 0
}

func (m *ConfigInfo) GetVMIndex() int32 {
	if m != nil {
		return m.VMIndex
	}
	return 0
}

type GrepLine struct {
	Line                 string   `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrepLine) Reset()         { *m = GrepLine{} }
func (m *GrepLine) String() string { return proto.CompactTextString(m) }
func (*GrepLine) ProtoMessage()    {}
func (*GrepLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_8065473b34526ba4, []int{1}
}

func (m *GrepLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrepLine.Unmarshal(m, b)
}
func (m *GrepLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrepLine.Marshal(b, m, deterministic)
}
func (m *GrepLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrepLine.Merge(m, src)
}
func (m *GrepLine) XXX_Size() int {
	return xxx_messageInfo_GrepLine.Size(m)
}
func (m *GrepLine) XXX_DiscardUnknown() {
	xxx_messageInfo_GrepLine.DiscardUnknown(m)
}

var xxx_messageInfo_GrepLine proto.InternalMessageInfo

func (m *GrepLine) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

type Cmd struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cmd) Reset()         { *m = Cmd{} }
func (m *Cmd) String() string { return proto.CompactTextString(m) }
func (*Cmd) ProtoMessage()    {}
func (*Cmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_8065473b34526ba4, []int{2}
}

func (m *Cmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cmd.Unmarshal(m, b)
}
func (m *Cmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cmd.Marshal(b, m, deterministic)
}
func (m *Cmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cmd.Merge(m, src)
}
func (m *Cmd) XXX_Size() int {
	return xxx_messageInfo_Cmd.Size(m)
}
func (m *Cmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cmd proto.InternalMessageInfo

func (m *Cmd) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type CloseMessage struct {
	CloseType            int32    `protobuf:"varint,1,opt,name=closeType,proto3" json:"closeType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseMessage) Reset()         { *m = CloseMessage{} }
func (m *CloseMessage) String() string { return proto.CompactTextString(m) }
func (*CloseMessage) ProtoMessage()    {}
func (*CloseMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_8065473b34526ba4, []int{3}
}

func (m *CloseMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseMessage.Unmarshal(m, b)
}
func (m *CloseMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseMessage.Marshal(b, m, deterministic)
}
func (m *CloseMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseMessage.Merge(m, src)
}
func (m *CloseMessage) XXX_Size() int {
	return xxx_messageInfo_CloseMessage.Size(m)
}
func (m *CloseMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CloseMessage proto.InternalMessageInfo

func (m *CloseMessage) GetCloseType() int32 {
	if m != nil {
		return m.CloseType
	}
	return 0
}

type Info struct {
	Info                 string   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_8065473b34526ba4, []int{4}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*ConfigInfo)(nil), "serverservices.ConfigInfo")
	proto.RegisterType((*GrepLine)(nil), "serverservices.GrepLine")
	proto.RegisterType((*Cmd)(nil), "serverservices.Cmd")
	proto.RegisterType((*CloseMessage)(nil), "serverservices.CloseMessage")
	proto.RegisterType((*Info)(nil), "serverservices.Info")
}

func init() { proto.RegisterFile("server_services.proto", fileDescriptor_8065473b34526ba4) }

var fileDescriptor_8065473b34526ba4 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x40, 0x1b, 0x1b, 0xb5, 0x19, 0x6b, 0x91, 0x51, 0x31, 0xc4, 0x22, 0xb2, 0x27, 0x0f, 0x12,
	0x44, 0xff, 0xa0, 0x39, 0x48, 0xa1, 0xb9, 0xa4, 0xe2, 0xb5, 0xd4, 0x64, 0x12, 0x03, 0x9b, 0xdd,
	0xb0, 0x1b, 0x8b, 0x7e, 0xac, 0xff, 0x22, 0xbb, 0x49, 0xa8, 0xb6, 0x78, 0xca, 0xcc, 0x1b, 0x32,
	0x33, 0x6f, 0x16, 0x2e, 0x35, 0xa9, 0x0d, 0xa9, 0x95, 0xf9, 0x94, 0x29, 0xe9, 0xb0, 0x56, 0xb2,
	0x91, 0x38, 0x69, 0x71, 0x4f, 0x59, 0x04, 0x10, 0x49, 0x91, 0x97, 0xc5, 0x5c, 0xe4, 0x12, 0xaf,
	0xc1, 0xe3, 0xb2, 0x58, 0x71, 0xda, 0x10, 0xf7, 0x9d, 0x5b, 0xe7, 0xee, 0x30, 0x19, 0x71, 0x59,
	0x2c, 0x4c, 0x8e, 0x3e, 0x1c, 0xbf, 0xc6, 0x73, 0x91, 0xd1, 0xa7, 0x7f, 0x60, 0x4b, 0x7d, 0xca,
	0x6e, 0x60, 0xf4, 0xac, 0xa8, 0x5e, 0x94, 0x82, 0x10, 0xc1, 0xe5, 0xa5, 0x20, 0xfb, 0xb7, 0x97,
	0xd8, 0x98, 0x5d, 0xc1, 0x30, 0xaa, 0x32, 0x3c, 0x83, 0x61, 0x5a, 0x65, 0x5d, 0xc5, 0x84, 0xec,
	0x1e, 0xc6, 0x11, 0x97, 0x9a, 0x62, 0xd2, 0x7a, 0x5d, 0x10, 0x4e, 0xc1, 0x4b, 0x4d, 0xfe, 0xf2,
	0x55, 0x53, 0x37, 0x7f, 0x0b, 0x58, 0x00, 0xae, 0xdd, 0x12, 0xc1, 0x2d, 0x45, 0x2e, 0xfb, 0x11,
	0x26, 0x7e, 0xfc, 0x76, 0x60, 0xb2, 0xb4, 0x6a, 0xcb, 0x4e, 0x0d, 0x67, 0x30, 0x6e, 0x49, 0x2b,
	0x88, 0x41, 0xf8, 0xd7, 0x3d, 0xdc, 0x8a, 0x07, 0x17, 0xbb, 0x35, 0x43, 0xd9, 0x00, 0x67, 0x70,
	0x9a, 0x50, 0xf3, 0xa1, 0x44, 0xbc, 0x6e, 0xd2, 0x77, 0xd2, 0x78, 0xbe, 0xd7, 0xa4, 0xca, 0x02,
	0x7f, 0x17, 0xf6, 0xd7, 0x60, 0x83, 0x07, 0x07, 0x23, 0x38, 0xb1, 0x92, 0xed, 0x32, 0x38, 0xdd,
	0xeb, 0xf0, 0xeb, 0x02, 0xff, 0x2d, 0xf2, 0x76, 0x64, 0x9f, 0xef, 0xe9, 0x27, 0x00, 0x00, 0xff,
	0xff, 0x24, 0x9a, 0x0c, 0x58, 0xd7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServerServicesClient is the client API for ServerServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerServicesClient interface {
	ServerConfig(ctx context.Context, in *ConfigInfo, opts ...grpc.CallOption) (*Info, error)
	ReturnMatches(ctx context.Context, in *Cmd, opts ...grpc.CallOption) (ServerServices_ReturnMatchesClient, error)
	CloseServer(ctx context.Context, in *CloseMessage, opts ...grpc.CallOption) (*Info, error)
}

type serverServicesClient struct {
	cc *grpc.ClientConn
}

func NewServerServicesClient(cc *grpc.ClientConn) ServerServicesClient {
	return &serverServicesClient{cc}
}

func (c *serverServicesClient) ServerConfig(ctx context.Context, in *ConfigInfo, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/serverservices.ServerServices/ServerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverServicesClient) ReturnMatches(ctx context.Context, in *Cmd, opts ...grpc.CallOption) (ServerServices_ReturnMatchesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServerServices_serviceDesc.Streams[0], "/serverservices.ServerServices/ReturnMatches", opts...)
	if err != nil {
		return nil, err
	}
	x := &serverServicesReturnMatchesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServerServices_ReturnMatchesClient interface {
	Recv() (*GrepLine, error)
	grpc.ClientStream
}

type serverServicesReturnMatchesClient struct {
	grpc.ClientStream
}

func (x *serverServicesReturnMatchesClient) Recv() (*GrepLine, error) {
	m := new(GrepLine)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *serverServicesClient) CloseServer(ctx context.Context, in *CloseMessage, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/serverservices.ServerServices/CloseServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServicesServer is the server API for ServerServices service.
type ServerServicesServer interface {
	ServerConfig(context.Context, *ConfigInfo) (*Info, error)
	ReturnMatches(*Cmd, ServerServices_ReturnMatchesServer) error
	CloseServer(context.Context, *CloseMessage) (*Info, error)
}

func RegisterServerServicesServer(s *grpc.Server, srv ServerServicesServer) {
	s.RegisterService(&_ServerServices_serviceDesc, srv)
}

func _ServerServices_ServerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServicesServer).ServerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/serverservices.ServerServices/ServerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServicesServer).ServerConfig(ctx, req.(*ConfigInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServerServices_ReturnMatches_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Cmd)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServerServicesServer).ReturnMatches(m, &serverServicesReturnMatchesServer{stream})
}

type ServerServices_ReturnMatchesServer interface {
	Send(*GrepLine) error
	grpc.ServerStream
}

type serverServicesReturnMatchesServer struct {
	grpc.ServerStream
}

func (x *serverServicesReturnMatchesServer) Send(m *GrepLine) error {
	return x.ServerStream.SendMsg(m)
}

func _ServerServices_CloseServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServicesServer).CloseServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/serverservices.ServerServices/CloseServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServicesServer).CloseServer(ctx, req.(*CloseMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServerServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "serverservices.ServerServices",
	HandlerType: (*ServerServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServerConfig",
			Handler:    _ServerServices_ServerConfig_Handler,
		},
		{
			MethodName: "CloseServer",
			Handler:    _ServerServices_CloseServer_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReturnMatches",
			Handler:       _ServerServices_ReturnMatches_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server_services.proto",
}
